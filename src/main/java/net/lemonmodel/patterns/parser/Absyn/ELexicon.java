package net.lemonmodel.patterns.parser.Absyn; // Java Package generated by the BNF Converter.

public class ELexicon extends Statement {
  public final URI uri_;
  public final String string_;
  public final ListPatternType listpatterntype_;

  public ELexicon(URI p1, String p2, ListPatternType p3) { uri_ = p1; string_ = p2; listpatterntype_ = p3; }

  public <R,A> R accept(net.lemonmodel.patterns.parser.Absyn.Statement.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof net.lemonmodel.patterns.parser.Absyn.ELexicon) {
      net.lemonmodel.patterns.parser.Absyn.ELexicon x = (net.lemonmodel.patterns.parser.Absyn.ELexicon)o;
      return this.uri_.equals(x.uri_) && this.string_.equals(x.string_) && this.listpatterntype_.equals(x.listpatterntype_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(this.uri_.hashCode())+this.string_.hashCode())+this.listpatterntype_.hashCode();
  }


}
