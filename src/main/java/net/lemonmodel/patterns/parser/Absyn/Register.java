package net.lemonmodel.patterns.parser.Absyn; // Java Package generated by the BNF Converter.

public abstract class Register implements java.io.Serializable {
  public abstract <R,A> R accept(Register.Visitor<R,A> v, A arg);
  public interface Visitor <R,A> {
    public R visit(net.lemonmodel.patterns.parser.Absyn.EBenchLevelRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EDialectRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EFacetiousRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EFormalRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EInHouseRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EIronicRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ENeutralRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ESlangRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ETabooRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.ETechnicalRegister p, A arg);
    public R visit(net.lemonmodel.patterns.parser.Absyn.EVulgarRegister p, A arg);

  }

}
